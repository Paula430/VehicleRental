// <auto-generated />
using BikeRentalSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BikeRentalSystem.Migrations
{
    [DbContext(typeof(BikeRentalContext))]
    partial class BikeRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BikeRentalSystem.Models.Rent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsLent")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumberDriver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailDriver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstNameDriver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("secondNameDriver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vehicleId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("vehicleId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("BikeRentalSystem.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wheel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BikeRentalSystem.Models.Bike", b =>
                {
                    b.HasBaseType("BikeRentalSystem.Models.Vehicle");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Vehicles", t =>
                        {
                            t.Property("Size")
                                .HasColumnName("Bike_Size");
                        });

                    b.HasDiscriminator().HasValue("Bike");
                });

            modelBuilder.Entity("BikeRentalSystem.Models.Scooter", b =>
                {
                    b.HasBaseType("BikeRentalSystem.Models.Vehicle");

                    b.Property<bool>("Electric")
                        .HasColumnType("bit");

                    b.Property<int>("Hight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Scooter");
                });

            modelBuilder.Entity("BikeRentalSystem.Models.Skates", b =>
                {
                    b.HasBaseType("BikeRentalSystem.Models.Vehicle");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("WheelHardness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Skates");
                });

            modelBuilder.Entity("BikeRentalSystem.Models.Rent", b =>
                {
                    b.HasOne("BikeRentalSystem.Models.Vehicle", "vehicle")
                        .WithMany()
                        .HasForeignKey("vehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
